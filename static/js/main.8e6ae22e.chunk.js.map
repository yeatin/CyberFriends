{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/CounterButton.js","components/Header.js","containers/App.js","index.js"],"names":["Card","email","id","name","className","alt","src","CardList","robots","map","user","key","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","margin","children","CounterButton","updateCount","setState","state","count","nextProps","nextState","this","color","onClick","Component","Header","App","useState","setRobots","setSearchField","setCount","useEffect","fetch","then","response","json","users","console","log","filteredRobots","filter","robot","toLowerCase","includes","length","event","target","value","ReactDOM","render","document","getElementById"],"mappings":"+MAceA,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,GAAIC,EAAU,EAAVA,KACtB,OACI,yBAAKC,UAAW,qDACZ,yBAAKC,IAAI,QAAQC,IAAG,+BAA0BJ,EAA1B,cACpB,6BACA,4BAAKC,GACL,2BAAIF,MCcDM,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACI,6BAEQA,EAAOC,KAAI,SAACC,GACR,OACI,kBAAC,EAAD,CACIC,IAAKD,EAAKR,GACVA,GAAIQ,EAAKR,GACTC,KAAMO,EAAKP,KACXF,MAAOS,EAAKT,aCAzBW,EAXG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACQ,2BACAV,UAAU,2CACVW,KAAK,SACLC,YAAY,gBACZC,SAAWH,KCORI,EAbA,SAACC,GACZ,OACI,yBAAKC,MAAS,CACdC,SAAU,OACVC,OAAQ,gBACRC,OAAQ,OACRC,OAAQ,SAEHL,EAAMM,SANX,M,oCC4BOC,E,kDA7BX,aAAe,IAAD,8BACV,gBAaJC,YAAc,WACV,EAAKC,UAAS,SAAAC,GACV,MAAO,CAAEC,MAAOD,EAAMC,MAAO,OAdjC,EAAKD,MAAQ,CACTC,MAAO,GAHD,E,kEAOQC,EAAWC,GAC7B,OAAIC,KAAKJ,MAAMC,QAAUC,EAAUD,Q,+BAanC,OAAO,4BACHI,MAAOD,KAAKd,MAAMe,MAClBC,QAASF,KAAKN,aAFX,UAGKM,KAAKJ,MAAMC,W,GAzBHM,aCgBbC,E,oLAdWN,EAAWC,GAC7B,OAAO,I,+BAIP,OACI,6BACI,wBAAI5B,UAAU,MAAd,gBACA,kBAAC,EAAD,CAAe8B,MAAM,a,GAThBE,aCuCNE,EAnCJ,WAAO,IAAD,EACeC,mBAAS,IADxB,mBACN/B,EADM,KACEgC,EADF,OAEyBD,mBAAS,IAFlC,mBAEN1B,EAFM,KAEO4B,EAFP,OAGaF,mBAAS,GAHtB,mBAGNT,EAHM,KAGCY,EAHD,KAKbC,qBAAU,WACNC,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAIR,EAAUQ,MAC7BC,QAAQC,IAAIpB,KACb,CAACA,IAEJ,IAIMqB,EAAiB3C,EAAO4C,QAAO,SAACC,GAClC,OAAOA,EAAMlD,KAAKmD,cAAcC,SAAS1C,EAAYyC,kBAEzD,OAAQ9C,EAAOgD,OAGX,yBAAKpD,UAAU,MACX,kBAAC,EAAD,MACA,6BACI,4BAAQ+B,QAAW,kBAAIO,EAASZ,EAAM,KAAtC,aAEJ,kBAAC,EAAD,CAAWhB,aAfI,SAAC2C,GACpBhB,EAAgBgB,EAAMC,OAAOC,UAezB,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAUnD,OAAQ2C,MAT9B,wBAAI/C,UAAU,SAAd,mB,MCnBJwD,IAASC,OACN,kBAAC,EAAD,MACCC,SAASC,eAAe,U","file":"static/js/main.8e6ae22e.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Card = ({email, id, name}) => {\n    return (\n        <div className= \"tc bg-light-red dib br3 pa3 ma2 grow bw2 shadow-5\">\n            <img alt=\"robot\" src={`https://robohash.org/${id}?200x200`} />\n            <div>\n            <h2>{name}</h2>\n            <p>{email}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n    return (\n        <div>\n            {\n                robots.map((user) => {\n                    return (\n                        <Card\n                            key={user.id}\n                            id={user.id}\n                            name={user.name}\n                            email={user.email}\n                        />\n                    )\n                })\n            }\n        </div>\n    );\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({searchField, searchChange}) => {\n    return (\n            <input \n            className=\"pa3 ba b--orange bg-lightest-blue tc mt2\"\n            type='search' \n            placeholder='search robots' \n            onChange= {searchChange}\n            />\n    );\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) =>{\n    return ( \n        <div style = {{\n        overflow: 'auto',\n        border: '5px solid red', \n        height: '33em',\n        margin: '10px'\n        }}>\n            {props.children};\n        </div>\n    );\n};\n\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass CounterButton extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            count: 0\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (this.state.count !== nextProps.count)\r\n            return true;\r\n        else\r\n            return false;\r\n    }\r\n\r\n    updateCount = () => {\r\n        this.setState(state => {\r\n            return { count: state.count +1}\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <button\r\n            color={this.props.color}\r\n            onClick={this.updateCount}>\r\n            Count: {this.state.count}\r\n        </button>\r\n    }\r\n}\r\n\r\nexport default CounterButton;","import React, { Component } from 'react';\r\nimport CounterButton from './CounterButton';\r\n\r\nclass Header extends Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className='f1'>Cyberfriends</h1>\r\n                <CounterButton color='red' />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { useState, useEffect } from \"react\";\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport './App.css';\nimport Header from '../components/Header';\n\nconst App =() => {\n    const [robots, setRobots] = useState([]);\n    const [searchField, setSearchField] = useState('');\n    const [count, setCount] = useState(0);\n\n    useEffect(() =>{\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => setRobots(users));\n        console.log(count);\n    }, [count])\n\n    const onSearchChange = (event) => {\n        setSearchField( event.target.value );\n    }\n\n    const filteredRobots = robots.filter((robot) => {\n        return robot.name.toLowerCase().includes(searchField.toLowerCase())\n    });\n    return !robots.length ?\n    <h2 className='f1 tc'>Now loading...</h2> :\n    (\n        <div className='tc'>\n            <Header />\n            <div>\n                <button onClick = {()=>setCount(count+1)}>Click Me</button>\n            </div>\n            <SearchBox searchChange={onSearchChange} />\n            <Scroll>\n                <CardList robots={filteredRobots} />\n            </Scroll>\n        </div>\n    );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\n// import registerServieWorker from './registerServiceWorker';\nimport 'tachyons';\n\n\nReactDOM.render(\n   <App />\n  , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// registerServieWorker();"],"sourceRoot":""}