{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["Card","email","id","name","className","alt","src","CardList","robots","map","user","key","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","margin","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"oOAceA,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,GAAIC,EAAU,EAAVA,KACtB,OACI,yBAAKC,UAAW,qDACZ,yBAAKC,IAAI,QAAQC,IAAG,+BAA0BJ,EAA1B,cACpB,6BACA,4BAAKC,GACL,2BAAIF,MCeDM,EApBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEhB,OACI,6BAEQA,EAAOC,KAAI,SAACC,GACR,OACI,kBAAC,EAAD,CACIC,IAAKD,EAAKR,GACVA,GAAIQ,EAAKR,GACTC,KAAMO,EAAKP,KACXF,MAAOS,EAAKT,aCDzBW,EAXG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACQ,2BACAV,UAAU,oCACVW,KAAK,SACLC,YAAY,gBACZC,SAAWH,KCORI,EAbA,SAACC,GACZ,OACI,yBAAKC,MAAS,CACdC,SAAU,OACVC,OAAQ,gBACRC,OAAQ,OACRC,OAAQ,SAEPL,EAAMM,WCYAC,G,wDAnBX,WAAYP,GAAQ,IAAD,8BACf,cAAMA,IACDQ,MAAQ,CACTC,UAAU,GAHC,E,8DAQDC,EAAOC,GACrBC,KAAKC,SAAU,CAACJ,UAAW,M,+BAI3B,OAAOG,KAAKJ,MAAMC,SAClB,sCACAG,KAAKZ,MAAMM,a,GAhBQQ,cC6CZC,E,kDAvCX,aAAe,IAAD,8BACV,gBAaJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAEnB,YAAauB,EAAMC,OAAOC,SAb1C,EAAKX,MAAQ,CACTnB,OAAQ,GACRK,YAAa,IAJP,E,gEAQO,IAAD,OAChB0B,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAAExB,OAAQmC,S,+BAOrC,IAAD,EAC2BZ,KAAKJ,MAA7BnB,EADH,EACGA,OAAQK,EADX,EACWA,YACV+B,EAAiBpC,EAAOqC,QAAO,SAACC,GAClC,OAAOA,EAAM3C,KAAK4C,cAAcC,SAASnC,EAAYkC,kBAEzD,OAAQvC,EAAOyC,OAGX,yBAAK7C,UAAU,MACX,wBAAIA,UAAU,MAAd,gBACA,kBAAC,EAAD,CAAWU,aAAciB,KAAKI,iBAC9B,kBAAC,EAAD,KACI,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAU3B,OAAQoC,OAPlC,wBAAIxC,UAAU,SAAd,sB,GAzBU6B,a,MCClBiB,IAASC,OACN,kBAAC,EAAD,MACCC,SAASC,eAAe,U","file":"static/js/main.2101f24b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Card = ({email, id, name}) => {\r\n    return (\r\n        <div className= \"tc bg-light-red dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <img alt=\"robot\" src={`https://robohash.org/${id}?200x200`} />\r\n            <div>\r\n            <h2>{name}</h2>\r\n            <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n    // throw new Error(\"nooooo\");\r\n    return (\r\n        <div>\r\n            {\r\n                robots.map((user) => {\r\n                    return (\r\n                        <Card\r\n                            key={user.id}\r\n                            id={user.id}\r\n                            name={user.name}\r\n                            email={user.email}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchField, searchChange}) => {\r\n    return (\r\n            <input \r\n            className=\"pa3 ba b--orange bg-lightest-blue\"\r\n            type='search' \r\n            placeholder='search robots' \r\n            onChange= {searchChange}\r\n            />\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) =>{\r\n    return ( \r\n        <div style = {{\r\n        overflow: 'auto',\r\n        border: '5px solid red', \r\n        height: '33em',\r\n        margin: '10px'\r\n        }}>\r\n        {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState( {hasError : true} );\r\n    }\r\n\r\n    render() {\r\n        return this.state.hasError ?\r\n        <h1>oooops</h1> :\r\n        this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React, { Component } from \"react\";\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport './App.css';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchField: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(users => this.setState({ robots: users }));\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchField: event.target.value });\r\n    }\r\n\r\n    render() {\r\n        const { robots, searchField } = this.state;\r\n        const filteredRobots = robots.filter((robot) => {\r\n            return robot.name.toLowerCase().includes(searchField.toLowerCase())\r\n        });\r\n        return !robots.length ?\r\n        <h2 className='f1 tc'>Now loading...</h2> :\r\n        (\r\n            <div className='tc'>\r\n                <h1 className='f1'>Cyberfriends</h1>\r\n                <SearchBox searchChange={this.onSearchChange} />\r\n                <Scroll>\r\n                    <ErrorBoundry>\r\n                        <CardList robots={filteredRobots} />\r\n                    </ErrorBoundry>\r\n                </Scroll>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\n// import registerServieWorker from './registerServiceWorker';\nimport 'tachyons';\n\n\nReactDOM.render(\n   <App />\n  , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// registerServieWorker();"],"sourceRoot":""}